#!/usr/bin/env python3
"""
SAFE MALWARE DETECTION TEST
This file creates a test file that matches a known malware hash
to test the real-time protection system safely.
"""

import hashlib
import os
import time

def create_test_malware_file():
    """Create a file that matches a known malware hash for testing."""
    
    # Known malware hash from antivirus.py
    target_hash = "d41d8cd98f00b204e9800998ecf8427e"  # MD5 of empty file
    
    print("🧪 Creating test file with known malware hash...")
    
    # Create an empty file (which has the hash d41d8cd98f00b204e9800998ecf8427e)
    test_file = "test_malware.exe"  # .exe extension to trigger suspicious file detection
    
    with open(test_file, "wb") as f:
        # Empty file - this will have the target hash
        pass
    
    # Verify the hash
    with open(test_file, "rb") as f:
        file_hash = hashlib.md5(f.read()).hexdigest()
    
    print(f"✅ Created test file: {test_file}")
    print(f"📊 File hash: {file_hash}")
    print(f"🎯 Target hash: {target_hash}")
    print(f"🔍 Hash match: {file_hash == target_hash}")
    
    # Keep file for a few seconds to allow real-time protection to detect it
    print("⏳ Keeping file for 10 seconds to test real-time protection...")
    for i in range(10, 0, -1):
        print(f"   {i} seconds remaining...")
        time.sleep(1)
    
    # Clean up
    if os.path.exists(test_file):
        os.remove(test_file)
        print(f"🧹 Cleaned up test file: {test_file}")
    
    print("✅ TEST COMPLETE - File should have been detected and quarantined!")

if __name__ == "__main__":
    print("=" * 60)
    print("🧪 REAL-TIME PROTECTION MALWARE DETECTION TEST")
    print("=" * 60)
    print("This test will:")
    print("1. Create a file with a known malware hash")
    print("2. Use .exe extension to trigger suspicious file detection")
    print("3. Keep the file for 10 seconds")
    print("4. Clean up automatically")
    print("=" * 60)
    print("⚠️  Make sure real-time protection is ENABLED in your antivirus!")
    print("=" * 60)
    
    input("Press Enter to start the test...")
    
    create_test_malware_file()
    
    print("=" * 60)
    print("🎯 Expected results in antivirus UI:")
    print("   - '⚠️ Suspicious file created: test_malware.exe'")
    print("   - '🚨 MALWARE DETECTED: test_malware.exe'")
    print("   - '✅ File quarantined: test_malware.exe'")
    print("   - UI update showing threat detected and quarantined")
    print("=" * 60) 